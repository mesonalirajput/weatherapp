[{"C:\\Users\\HP\\Documents\\sonali\\newproj\\src\\reportWebVitals.js":"1","C:\\Users\\HP\\Documents\\sonali\\newproj\\src\\App.js":"2","C:\\Users\\HP\\Documents\\sonali\\newproj\\src\\index.js":"3"},{"size":362,"mtime":1607607160696,"results":"4","hashOfConfig":"5"},{"size":7567,"mtime":1613297230284,"results":"6","hashOfConfig":"5"},{"size":518,"mtime":1612703865910,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tpiv4u",{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Documents\\sonali\\newproj\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Documents\\sonali\\newproj\\src\\App.js",["15","16","17","18"],"// import React, {Component} from 'react';\n\n// class FavGames extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {selectedsport: ''};\n//   }\n//   _Selectsport = (sport) => {\n//     this.setState({selectedsport: sport});\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <div>{this.state.selectedsport}</div>\n//         <Sport sport={'Cricket'} selectsport={this._Selectsport}></Sport>\n//         <Sport sport={'Hockey'} selectsport={this._Selectsport}></Sport>\n//         <Sport sport={'Wrestling'} selectsport={this._Selectsport}></Sport>\n//         <Sport sport={'Swimming'} selectsport={this._Selectsport}></Sport>\n//       </div>\n//     );\n//   }\n// }\n// class Sport extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <button\n//           onClick={() => {\n//             this.props.selectsport(this.props.sport);\n//           }}>\n//           {this.props.sport}\n//         </button>\n//       </div>\n//     );\n//   }\n// }\n// export default FavGames;\n\n// _____________________________________________________________________________________________\n\n// import React, {Component} from 'react';\n\n// class FavGames extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {selectedsport: ''};\n//   }\n//   _Selectsport = (sport) => {\n//     this.setState({selectedsport: sport});\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <div>{this.state.selectedsport}</div>\n//         <Sport sport={'Cricket'} selectsport={this._Selectsport}></Sport>\n//         <Sport sport={'Hockey'} selectsport={this._Selectsport}></Sport>\n//         <Sport sport={'Wrestling'} selectsport={this._Selectsport}></Sport>\n//         <Sport sport={'Swimming'} selectsport={this._Selectsport}></Sport>\n//       </div>\n//     );\n//   }\n// }\n// class Sport extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <button\n//           onClick={() => {\n//             this.props.selectsport(this.props.sport);\n//           }}>\n//           {this.props.sport}\n//         </button>\n//       </div>\n//     );\n//   }\n// }\n// export default FavGames;\n\n// _____________________________________________________________________________________________\n\nimport React, {Component} from 'react';\nimport './App.css';\nimport {\n  TiWeatherCloudy,\n  TiWeatherSnow,\n  TiWeatherSunny,\n  TiWeatherShower,\n  TiWeatherStormy,\n  TiWeatherWindyCloudy,\n  TiWeatherPartlySunny,\n  TiWeatherWindy,\n} from 'react-icons/ti';\nimport {BiSearchAlt} from 'react-icons/bi';\nimport {HiArrowNarrowUp, HiArrowNarrowDown} from 'react-icons/hi';\nconst API_URL =\n  'https://api.openweathermap.org/data/2.5/onecall?lat=30.3833&lon=75.55&appid=542ffd081e67f4512b705f89d2a611b2&exclude=minutely,hourly';\nvar daysFull = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n];\nlet Icons = {\n  Clouds: TiWeatherCloudy,\n  Clear: TiWeatherSunny,\n  Rain: TiWeatherShower,\n  Mist: TiWeatherWindyCloudy,\n  Haze: TiWeatherWindy,\n};\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {CityInput: ''};\n  }\n\n  _onCityChange = (e) => {\n    this.setState({CityInput: e.target.value});\n  };\n  _onSearch = (e) => {\n    let {CityInput} = this.state;\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${CityInput}&appid=6ec7b2ca4d992da292242111ffeddc78`,\n    )\n      .then((response) => response.json())\n      .then((res) => {\n        let dat = {\n          city: res.name,\n          lat: res.coord.lat,\n          lon: res.coord.lon,\n        };\n        this.props._getWeather(dat);\n      });\n    e.preventDefault();\n    return false;\n  };\n  render() {\n    let {wData} = this.props;\n    if (!wData) {\n      return null;\n    }\n    let current = wData.current;\n    let dt = new Date(parseInt(current.dt) * 1000);\n    let Currenticon = Icons[current.weather[0].main];\n    let daily = wData.daily;\n    let RenderDays = daily.map((data) => <Day data={data} />);\n    let today = daily[0];\n    return (\n      <div className={'Fullpage'}>\n        <div className={'UpperBox'}>\n          <div className={'LeftUprBox'}>\n            <form className={'SearchContainer'} onSubmit={this._onSearch}>\n              <input\n                className={'SearchInput'}\n                type=\"text\"\n                placeholder=\"Search\"\n                onChange={this._onCityChange}\n                value={this.state.CityInput}\n                name=\"search\"></input>\n              <button\n                className={'SearchBtn'}\n                type=\"submit\"\n                onClick={this._onSearch}>\n                <BiSearchAlt color={'black'} size={34} />\n              </button>\n            </form>\n            <div className={'Name'}>{this.props.cityName}</div>\n            <div className={'Day'}>{daysFull[dt.getDay()]}</div>\n            <div className={'Date'}>{dt.toDateString().substring(3)}</div>\n            <div className={'Wind'}>Wind {current.wind_speed}Km/h</div>\n          </div>\n          <div className={'UpperIcon'}>\n            <Currenticon color={'#ffffff'} size={300} />\n            {current.weather[0].main}\n          </div>\n          <div className={'tempFull'}>\n            <div className={'tempsCon'}>\n              <div className={'inTempCon'}>\n                <HiArrowNarrowDown color={'#ffffff'} size={50} />\n                <div className={'temp'}>\n                  {Math.round(parseInt(today.temp.min) - 273.15)}째\n                </div>\n              </div>\n              <div className={'inTempCon'}>\n                <HiArrowNarrowUp color={'#ffffff'} size={50} />\n                <div className={'temp'}>\n                  {Math.round(parseInt(today.temp.max) - 273.15)}째\n                </div>\n              </div>\n            </div>\n\n            <div className={'CurrentTemp'}>\n              {Math.round(parseInt(current.temp) - 273.15)}째\n            </div>\n          </div>\n        </div>\n        <div className={'LowerBox'}>\n          <div className={'DaysCon'}>{RenderDays}</div>\n        </div>\n      </div>\n    );\n  }\n}\nvar days = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\nfunction Day(props) {\n  let {data} = props;\n  let dt = new Date(data.dt * 1000);\n  let Icon = Icons[data.weather[0].main];\n  // console.log(data.weather[0].main, Icon);\n  return (\n    <div className={'wBox'}>\n      <div>{days[dt.getUTCDay()]}</div>\n      <Icon color={'#ffffff'} size={127} />\n      <div>{Math.round(parseInt(data.temp.day) - 273.15)}째</div>\n    </div>\n  );\n}\n\nclass WeatherWebApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {wData: '', cityName: ''};\n  }\n  componentDidMount() {\n    // let nd = new Date(1613629800 * 1000);\n    // console.log(nd.getUTCDay());\n    this._getWeather();\n  }\n  _getWeather = (dat) => {\n    if (!dat) {\n      dat = {\n        city: 'Barnala',\n        lat: 30.3833,\n        lon: 75.55,\n      };\n    }\n\n    fetch(\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${dat.lat}&lon=${dat.lon}&appid=542ffd081e67f4512b705f89d2a611b2&exclude=minutely,hourly`,\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({wData: data, cityName: dat.city});\n        // console.log(dat, data);\n      })\n      .catch((err) => console.log('error fetching data!: ', err));\n  };\n  render() {\n    return (\n      <MainPage\n        wData={this.state.wData}\n        _getWeather={this._getWeather}\n        cityName={this.state.cityName}\n      />\n    );\n  }\n}\nexport default WeatherWebApp;\n","C:\\Users\\HP\\Documents\\sonali\\newproj\\src\\index.js",[],{"ruleId":"19","severity":1,"message":"20","line":85,"column":3,"nodeType":"21","messageId":"22","endLine":85,"endColumn":16},{"ruleId":"19","severity":1,"message":"23","line":88,"column":3,"nodeType":"21","messageId":"22","endLine":88,"endColumn":18},{"ruleId":"19","severity":1,"message":"24","line":90,"column":3,"nodeType":"21","messageId":"22","endLine":90,"endColumn":23},{"ruleId":"19","severity":1,"message":"25","line":95,"column":7,"nodeType":"21","messageId":"22","endLine":95,"endColumn":14},"no-unused-vars","'TiWeatherSnow' is defined but never used.","Identifier","unusedVar","'TiWeatherStormy' is defined but never used.","'TiWeatherPartlySunny' is defined but never used.","'API_URL' is assigned a value but never used."]